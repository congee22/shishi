### 排序

1.快速排序

基于分治

思想

1.确定分界点

常用的有q(l)，q(r),q((l+r)/2),随机数

**2.调整区间**

根据确定的分界点，使得左半边所有数都小于等于x，右半边所有数都大于等于x

3.递归处理左右两边





2.归并排序

同样是分治，但以中间点为分界线

1.递归排序左边右边

**2.归并**

把两个有序的数组合并为一个



### 二分

1.整数

找中间值

判断中间值是否满足性质，根据判断结果不同调整区间

每次更新区间的时候要注意是r=mid还是l=mid



2.浮点数

需要注意不能相等而是当无限逼近时就可以判断为“相等”

同样不断进行区间更改

最好要比要求的精度值位数多2防止出错





### 大数

**大整数存储**

可以把大数存进数组

数组的第0位存大数的个位，倒着来存，方便进位

数组的末位进行数字更改会更加容易

**运算**

1.加法

模拟人工加法的过程

比如：先把个位相加，进位，再加十位，加上进位，再进位，以此类推

用代码进行这个过程的模拟

可以用两个数组分别存储两个大数

对应的某一位数想加，用模来确定进位

2.减法

同理，模拟人工减法的过程

每一位进行减法时，如果大于等于0，说明足够减，如果小于零，向上一位进行借位，同时在运算时也需要考虑到该位数进行减法时有没有被借位，需要减去借位1

同时进行减法时统一进行大数减小数的运算，在减法前先进行大小判断，根据判断结果来判断最后的结果是否带负号

3.乘法

大数位数很长的情况最好用字符串

情况同加法类似，也是用模进位和来实现相乘

注意只取个位作为结果，其余的进行进位

4.除法

从高位开始

求商作为结果，余数乘10带上下一位接着进行运算

### 前缀和

现在有一个a1-an的数组

前缀和数组表示为si=a1+……+ai

前缀和里一定要让数组从a1开始

1.如何求前缀和

从前往后相加即可

for循环

si=si-1+ai

2.作用

能快速求出原数组中某一段的和

比如ar到al

可以用sl-sr-1

s0定义成0



**二维前缀和**

作用：快速求出子矩阵所有元素的和



### 差分

进行构造，使得ai是b1-bi的前缀和，b数组称为a的差分

相当于逆运算

作用：若需要a数组进行某一区间内所有的数都+c的操作

可以用差分求原来的a数组

如果是l-r的范围内a数组每一个数都要加c，只需要让bl+c，就可以满足这一点，通过前缀和，每一个范围内a数组的数都会因为bl+c而+c

再让br+1减去c，就可以让不在该范围内a数组的数不加c

