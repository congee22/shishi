### 双指针算法

核心思想

一般都是

for（i=0；i<n；i++）

​    for（j=0；j<n;  j++)

O(n^2)

双指针算法可以将上面的朴素算法优化到O（n）



### 位运算

n的二进制表示中第k位是几

1.先把第k位移到最后一位

2.看个位是几



### 离散化

1.a[]中可能有重复元素，去重

2.如何算出x离散化后的值，可以用二分来找

去重之前需要先进行排序

然后根据

1.这个数为第一个数

2.这个数不与前面一个数相同

这两个条件二选一来进行去重



### 区间合并

实际求并集

两个区间如果只有端点重合也可以求区间合并

1.按照所有区间的左端点来进行排序

2.扫描整个区间，把所有可能有交集的区间进行合并

3.两个区间的关系有三种，第一种包含，第二种有交集，第三种没关系（当前扫描区间与后面区间的关系）

第一种不用改变当前扫描的区间，第二种需要延长当前扫描的区间，第三种当前维护的区间可以放入答案了，不会和后面任何一个区间有交集

随后把当前维护的区间后移，再执行这一系列的操作

最后得到的结果就是几个没有任何交集的区间



### 用数组来模拟链表

单链表：邻接表，用来存储图和树

双链表：优化某些节点



### 用数组来模拟栈和队列

栈 先进后出

队列 先进先出



### KMP



### Trie树

用来高效的存储和查找字符串集合的数据结构



### 并查集

1.将两个集合合并

2.询问两个元素是否在一个集合中

基本原理：每个集合用一颗树来表示。树根的编号就是整个集合的编号。每个节点存储它的父节点，p[x]表示x的父节点



### 堆

如何手写一个堆

一个完全二叉树

存储

根节点x为1

x的左儿子2x，右儿子2x+1

下标一般从1开始比较好用





常见操作

1.插入一个数

2.求集合当中的最小值

3.删除最小值

4.删除任意一个元素

5.修改任意一个元素



蓝桥杯结束后一周由于高数考试，离散和电路作业，主要用于学习高数离散和电路以及一点点物理
Java大概学到了95p，由于前期学习中没有做笔记这里无法贴出，高数考试结束后会加快进度x
个人感觉在前期Java的语法和c很相似，但是体感要比c严格一些，所以没有做什么笔记orz
